autogen definitions options;


copyright = {
    date        = "2005";
    owner       = "Aaron Turner";
    type        = "bsd";
    author      = <<- EOText
Copyright 2000-2005 Aaron Turner

For support please use the tcpreplay-users@lists.sourceforge.net mailing list.
EOText;
};

package         = "tcpbridge";
prog-name       = "tcpbridge";
prog-title      = "Bridge network traffic across two interfaces";
long-opts;
gnu-usage;
help-value      = "H";
save-opts-value = "";
load-opts-value = "";


config-header   = "config.h";

include         = "#include \"defines.h\"\n"
                "#include \"tcpbridge.h\"\n"
                "#include \"common.h\"\n"
                "extern char pcap_version[];\n"
                "extern tcpbridge_opt_t options;\n";

homerc          = "$$/";

explain = <<- EOExplain
tcpbridge is a tool for briding network traffic across two interfaces
and optionally modifying the packets in betweeen
EOExplain;

detail = <<- EODetail
The basic operation of tcpbridge is to be a network bridge between two
subnets.  All  packets recieved on one interface are sent via the other.

Optionally, packets can be edited in a variety of ways according to your needs.
EODetail;

man-doc = <<- EOMan
.SH "SIGNALS"
tcpreplay understands the following signals:
@enumerate
@item @var{SIGUSR1}
Suspend tcpbridge
@item @var{SIGCONT}
Restart tcpbridge
@end enumerate

.SH "SEE ALSO"
tcpdump(1), tcpprep(1), tcprewrite(1), tcpreplay(1)

.SH "BUGS"
tcpbridge can only send packets as fast as your computer's interface,
processor and system bus will allow.

Connecting both interfaces to the same subnet may create a broadcast storm and
take down the network.  Improper use of the packet editing functions may have 
other undefined and possible negative consequences.

Some operating systems by default do not allow for forging source MAC
addresses.  Please consult your operating system's documentation and the
tcpreplay FAQ if you experiance this issue.
EOMan;

flag = {
    name        = dbug;
    value       = d;
    arg-type    = number;
    max         = 1;
    immediate;
    arg-range   = "0->5";
    arg-default = 0;
    descrip     = "Enable debugging output";
    doc         = <<- EOText
If configured with --enable-debug, then you can specify a verbosity 
level for debugging output.  Higher numbers increase verbosity.
EOText;
};

/* Verbose decoding via tcpdump */

flag = {
    ifdef       = HAVE_TCPDUMP;
    name        = verbose;
    value       = v;
    max         = 1;
    immediate;
    descrip     = "Print decoded packets via tcpdump to STDOUT";
    settable;
    doc         = "";
};

flag = {
    ifdef       = HAVE_TCPDUMP;
    name        = decode;
    flags-must  = verbose;
    value       = A;
    arg-type    = string;
    max         = 1;
    descrip     = "Arguments passed to tcpdump decoder";
    doc         = <<- EOText
When enabling verbose mode (@var{-v}) you may also specify one or more
additional  arguments to pass to @code{tcpdump} to modify the way packets
are decoded.  By default, -n and -l are used.   Be  sure  to
quote the arguments like: -A "-axxx" so that they are not interpreted
by tcpreplay.  The following arguments are vaild:
    [ -aAeNqRStuvxX ]
    [ -E spi@ipaddr algo:secret,... ]
    [ -s snaplen ]
EOText;
};


/*
 * Outputs: -i, -I
 */

flag = {
    name        = intf1;
    value       = i;
    arg-type    = string;
    max         = 1;
    must-set;
    descrip     = "Primary interface (listen in uni-directional mode)";
    doc         = "";
};

flag = {
    name        = intf2;
    value       = I;
    arg-type    = string;
    max         = 1;
    descrip     = "Secondary interface (send in uni-directional mode)";
    doc         = "";
};

flag = {
	name		= unidir;
	value		= u;
	max		= 1;
	descrip		= "Send and receive in only one direction";
	doc		= <<- EOText
Normally, tcpbridge will send and receive traffic in both directions 
(bi-directionally).  However, if you choose this option, traffic will 
be sent uni-directionally.
EOText;
};

flag = {
	name		= limit;
	value		= l;
	arg-type	= number;
	max			= 1;
	arg-default	= -1;
	arg-range	= "0->";
	descrip 	= "Limit the number of packets to send";
	doc 		= <<- EOText
By default, tcpbridge will send packets forever or until Ctrl-C.  Alternatively,
you can specify a maximum number of packets to send.
EOText;
};


flag = {
    name        = pid;
    value       = P;
    descrip     = "Print the PID of tcpreplay at startup";
    flag-code   = <<- EOPid
    
    fprintf(stderr, "PID: %hu\n", getpid());
    
EOPid;
    doc         = "";
};

flag = {
    name        = version;
    value       = V;
    descrip     = "Print version information";
    flag-code   = <<- EOVersion
    
    fprintf(stderr, "tcpbridge version: %s (build %s)", VERSION, svn_version());
#ifdef DEBUG
    fprintf(stderr, " (debug)");
#endif
    fprintf(stderr, "\n");
	fprintf(stderr, "Copyright Aaron Turner <aturner@pobox.com>\n");
    fprintf(stderr, "Compiled against libnet: %s\n", LIBNET_VERSION);
    fprintf(stderr, "Compiled against libpcap: %s\n", pcap_version);
#ifdef ENABLE_64BITS
    fprintf(stderr, "64 bit packet counters: enabled\n");
#else
    fprintf(stderr, "64 bit packet counters: disabled\n");
#endif
    exit(0);
    
EOVersion;
    doc         = "";
};

flag = {
    name        = less-help;
    value       = "h";
    immediate;
    descrip     = "Display less usage information and exit";
    flag-code   = <<- EOHelp
  
    USAGE(EXIT_FAILURE);

EOHelp;
    doc         = "";
};
