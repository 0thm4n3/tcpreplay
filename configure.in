
dnl $Id: configure.in,v 1.33 2003/05/03 01:06:53 aturner Exp $

AC_INIT(tcpreplay.c)
AC_CONFIG_HEADER(config.h)

dnl Set version info here!
MAJOR_VERSION=1
MINOR_VERSION=4
MICRO_VERSION=beta4
TCPREPLAY_VERSION=$MAJOR_VERSION.$MINOR_VERSION.$MICRO_VERSION

dnl Release is only used for the RPM spec file
TCPREPLAY_RELEASE=1


AC_DEFINE_UNQUOTED(VERSION, "$TCPREPLAY_VERSION")
AC_SUBST(TCPREPLAY_VERSION)
AC_SUBST(TCPREPLAY_RELEASE)


dnl Initialize prefix.
if test "$prefix" = "NONE"; then
	prefix="/usr/local"
fi

dnl Determine OS
AC_CANONICAL_BUILD
AC_CANONICAL_HOST
AC_CANONICAL_TARGET
AC_SUBST(host)
AC_SUBST(build)
AC_SUBST(target)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CXX
AC_PROG_CPP
AC_PROG_LN_S
AC_PROG_RANLIB
AC_PROG_AWK
AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_PATH_PROG(PRINTF, printf)
AC_SUBST(PRINTF)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_C_CONST
AC_C_INLINE

dnl Enable debugging in code/compiler options
debug=no
AC_MSG_CHECKING(for debug enabled)
AC_ARG_WITH(debug,
[  --with-debug            Enable debugging code and support for the -d option],
[ debug=yes
 AC_DEFINE(DEBUG) 
 AC_MSG_RESULT(yes)], 
AC_MSG_RESULT(no))

dnl Enable Efense
efence=no
AC_MSG_CHECKING(for efence enabled)
AC_ARG_WITH(efence,
[  --with-efence           Enable Electric Fence memory debugger],
[ efence=yes
  AC_DEFINE(EFENCE)
  AC_MSG_RESULT(yes)],
  AC_MSG_RESULT(no)
  )

dnl Enable Gprof
gprof=no
AC_MSG_CHECKING(for gprof enabled)
AC_ARG_WITH(gprof,
[  --with-gprof            Enable GNU Profiler],
[ gprof=yes
  AC_DEFINE(GPROF)
  AC_MSG_RESULT(yes)],
  AC_MSG_RESULT(no)
  )


dnl Use these compiler flags if we have gcc.
if test $ac_cv_prog_gcc = yes -a $debug = no ; then
    CCOPTS="-pipe -Wall -O2"
    CFLAGS="$CCOPTS"
else
	CCOPTS="-pipe -Wall -ggdb -pedantic"
	CFLAGS="$CCOPTS"
fi

dnl Gprof requires -ggdb
if test $gprof = yes -a $debug = yes ; then
	CCOPTS="$CCOPTS -pg" 
	CFLAGS="$CCOPTS"
elif test $gprof = yes -a $debug = no ; then
	CCOPTS="-pipe -Wall -pg -ggdb"
	CFLAGS="$CCOPTS"
fi

dnl Electric Fence
if test $efence = yes ; then
	CCOPTS="$CCOPTS -lefence"
	CFLAGS="$CCOPTS"
fi

dnl Check for types.
AC_CHECK_TYPE(u_int8_t, uint8_t)
AC_CHECK_TYPE(u_int16_t, uint16_t)
AC_CHECK_TYPE(u_int32_t, uint32_t)
AC_CHECK_TYPE(u_int64_t, uint64_t)

dnl Check for other header files
AC_CHECK_HEADERS([fcntl.h stddef.h sys/socket.h  arpa/inet.h sys/time.h signal.h])

dnl Checks for libraries.
AC_CHECK_LIB(socket, socket)
AC_CHECK_LIB(nsl, gethostbyname)
AC_CHECK_LIB(rt, nanosleep)

dnl Checks for library functions.
AC_FUNC_MALLOC
AC_FUNC_MEMCMP
AC_TYPE_SIGNAL
AC_FUNC_VPRINTF
AC_CHECK_FUNCS([gettimeofday ctime memset regcomp strdup strerror strtol])

dnl Check for inet_aton and inet_addr
AC_CHECK_FUNC(inet_aton, AC_DEFINE(INET_ATON) inet_aton=yes, inet_aton=no)
AC_CHECK_FUNC(inet_addr, AC_DEFINE(INET_ADDR) inet_addr=yes, inet_addr=no)

if test $inet_aton = no -a $inet_addr = no ; then
	AC_MSG_ERROR("We need either inet_aton or inet_addr")
fi
	
dnl Checks for libnet (shamelessly horked from dsniff)
AC_MSG_CHECKING(for libnet)
AC_ARG_WITH(libnet,
[  --with-libnet=DIR       use libnet in DIR],
[ case "$withval" in
  yes|no)
     AC_MSG_RESULT(no)
     ;;
  *)
     AC_MSG_RESULT($withval)
     if test -f $withval/include/libnet.h -a -f $withval/lib/libnet.a; then
        owd=`pwd`
        if cd $withval; then 
          withval=`pwd` 
          cd $owd
        fi
		LNETINC="-I$withval/include"
		LNETINCDIR="$withval/include"
		LNETLIB="-L$withval/lib -lnet"
     else
        AC_ERROR(libnet.h or libnet.a not found in $withval)
     fi
     ;;
  esac ],
[ if test -f ${prefix}/include/libnet.h; then
     LNETINC="-I${prefix}/include"
     LNETINCDIR="$prefix/include"
     LNETLIB="-L${prefix}/lib -lnet"
  elif test -f /usr/include/libnet.h; then
     LNETINCDIR="/usr/include"
     LNETLIB="-lnet"
  else
     AC_MSG_RESULT(no)
     AC_ERROR(libnet not found)
  fi
  AC_MSG_RESULT(yes) ]
)
AC_SUBST(LNETINC)
AC_SUBST(LNETLIB)


dnl Checks to see what version of libnet we've got
OLDLIBS="$LIBS"
LIBS="$LNETLIB"

dnl Check to see what version of libnet
dnl this code has been reduced a lot, but probably still could be
dnl reduced quite a bit more if we chose too
AC_MSG_CHECKING(for libnet version)

AC_TRY_RUN([
#include <string.h>
#define LIBNET_LIL_ENDIAN 1
#include "$LNETINCDIR/libnet.h"
#define LIB_TEST "1.0"
/* 
 * simple proggy to test the version of libnet
 * returns zero if it's 1.0.x 
 * or one otherwise
 */
int
main (int argc, char *argv[])
{
	if (strncmp(LIB_TEST, LIBNET_VERSION, 3) == 0)
		exit(0);
	exit(1);
}],
	libnet_ver_10=yes
	AC_MSG_RESULT(1.0.x), 
	libnet_ver_10=no,
	libnet_ver_10=no
	)

AC_TRY_RUN([
#include <string.h>
#include "$LNETINCDIR/libnet.h"
#define LIB_TEST "1.1"
/* 
 * simple proggy to test the version of libnet
 * returns zero if it's 1.0.x 
 * or one otherwise
 */
int
main (int argc, char *argv[])
{
	if (strncmp(LIB_TEST, LIBNET_VERSION, 3) == 0)
		exit(0);
	exit(1);
}],
	libnet_ver_11=yes
	AC_MSG_RESULT(1.1.x), 
	libnet_ver_11=no,
	libnet_ver_11=no
	)


if test $libnet_ver_10 = no -a $libnet_ver_11 = no ; then
	AC_MSG_RESULT(unknown)
	AC_MSG_ERROR(Unable to determine version of libnet)
fi

if test $libnet_ver_10 = yes ; then
	  AC_MSG_ERROR(Libnet version 1.0.x is no longer supported.
		Please upgrade to 1.1.0 or better)
fi
dnl restore LIBS
LIBS="$OLDLIBS"


dnl Checks for libpcap
AC_MSG_CHECKING(for libpcap)
AC_ARG_WITH(libpcap,
[  --with-libpcap=DIR      use libpcap in DIR],
[ case "$withval" in
  yes|no)
     AC_MSG_RESULT(no)
     ;;
  *)
     AC_MSG_RESULT($withval)
     if test -f $withval/include/pcap.h -a -f $withval/lib/libpcap.a; then
        owd=`pwd`
        if cd $withval; then 
          withval=`pwd` 
          cd $owd
        fi
		LPCAPINC="-I$withval/include"
		LPCAPINCDIR="$withval/include"
		LPCAPLIB="-L$withval/lib -lpcap"
     else
        AC_ERROR(pcap.h or libpcap.a not found in $withval)
     fi
     ;;
  esac ],
[ if test -f ${prefix}/include/pcap.h; then
     LPCAPNC="-I${prefix}/include"
     LPCAPINCDIR="$prefix/include"
     LPCAPLIB="-L${prefix}/lib -lpcap"
  elif test -f /usr/include/pcap.h; then
     LPCAPINCDIR="/usr/include"
     LPCAPLIB="-lpcap"
  else
     AC_MSG_RESULT(no)
     AC_ERROR(libpcap not found)
  fi
  AC_MSG_RESULT(yes) ]
)
AC_SUBST(LPCAPINC)
AC_SUBST(LPCAPLIB)



dnl (shamelessly ripped off from libpcap)
dnl Checks to see if unaligned memory accesses fail
dnl
dnl     FORCE_ALIGN (DEFINED)
dnl
AC_MSG_CHECKING(for requires strict byte alignment)
AC_CACHE_VAL(unaligned_fail,
        [case "$host_cpu" in

        # XXX: should also check that they don't do weird things (like on arm)
        alpha*|arm*|hp*|mips*|sparc*|ia64)
                unaligned_fail=yes
                ;;

        *)
                cat >conftest.c <<EOF
		#include <sys/types.h>
		#include <sys/wait.h>
		#include <stdio.h>
                unsigned char a[[5]] = { 1, 2, 3, 4, 5 };
                main() {
                unsigned int i;
                pid_t pid;
                int status;
                /* avoid "core dumped" message */
                pid = fork();
                if (pid <  0)
                        exit(2);
                if (pid > 0) {
                        /* parent */
                        pid = waitpid(pid, &status, 0);
                        if (pid < 0)
                                exit(3);
                        exit(!WIFEXITED(status));
                }
                /* child */
                i = *(unsigned int *)&a[[1]];
                printf("%d\n", i);
                exit(0);
                }
EOF
                ${CC-cc} -o conftest $CFLAGS $CPPFLAGS $LDFLAGS \
                    conftest.c $LIBS >/dev/null 2>&1
                if test ! -x conftest ; then
                        dnl failed to compile for some reason
                        unaligned_fail=yes
                else
                        ./conftest >conftest.out
                        if test ! -s conftest.out ; then
                                unaligned_fail=yes
                        else
                                unaligned_fail=no
                        fi
                fi
                rm -f conftest* core core.conftest
                ;;
        esac])
    AC_MSG_RESULT($unaligned_fail)
    if test $unaligned_fail = yes ; then
            AC_DEFINE(FORCE_ALIGN,1,[if unaligned access fails])
    fi



AC_MSG_CHECKING( for 'make test' profile)
if test "$host" != "$build" ; then
	AC_MSG_WARN(Unable to do tests when cross-compiling)
fi

dnl Allows user to choose which nic to use for testing purposes
AC_ARG_WITH(testnic,
[  --with-testnic=NIC      Select which network card to use for testing],
[ nic1=$withval
nic2=$withval
AC_MSG_RESULT(Using --with-testnic=$withval)],
[
dnl these need to be dynamic based on OS
case $host in
	*-*-linux*)
	nic1=eth0
	nic2=eth0
	AC_MSG_RESULT(Linux)
	;;

	*-*-solaris*)
	nic1=hme0
	nic2=hme0
	AC_MSG_RESULT(Solaris)
	;;

	*-*-sunos*)
	nic1=hme0
	nic2=hme0
	AC_MSG_RESULT(SunOS)
	;;

	powerpc-apple-darwin*)
	nic1=en0
	nic2=en0
	AC_MSG_RESULT(Apple OSX)
	;;

	*)
	AC_MSG_RESULT([$host is unknown!  
	Please use --with-nictest to select an interface for 'make test'])
	;;
esac])


AC_ARG_WITH(testnic2,
[  --with-testnic2=NIC2    Select an optional 2nd network card to use for testing],
[ nic2=$withval ])

AC_MSG_NOTICE(Using $nic1 for 1st test network interface card)
AC_MSG_NOTICE(Using $nic2 for 2nd test network interface card)
AC_SUBST(nic1)
AC_SUBST(nic2)

AC_OUTPUT(Makefile)
AC_OUTPUT(test/Makefile)
AC_OUTPUT(tcpreplay.spec)

cd libredblack && sh ./configure
