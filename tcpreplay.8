.\" $Id: tcpreplay.8,v 1.15 2002/10/03 18:02:13 aturner Exp $
.TH TCPREPLAY 8
.SH NAME
tcpreplay \- replay packets from capture files
.SH SYNOPSIS
.na
.B tcpreplay
.B \-i
.I intf
[
.B \-c
.I cache file
] [
.B \-f
.I config file
] [ 
.B \-I
.I intf mac
] [
.B \-j
.I intf2
] [
.B \-J
.I intf mac
] [
.B \-l
.I loop count
] [
.B \-m
.I multiplier
|
.B \-r
.I rate
|
.B \-R
] [
.B \-s
.I seed
] [
.B \-C 
CIDR...
] [
.B \-u pad|trunc
] [
.B \-v
] [
.B \-h|-V
] [
.B \-M
] [
.B \-x
.I include
|
.B \-X
.I exclude
]
.I file ...
.SH DESCRIPTION
.LP
.I tcpreplay
is a tool for replaying network traffic from files
saved with 
\fItcpdump(8)\fP
or
\fIsnoop(1M)\fP.
.LP
The basic operation of
.I tcpreplay
is to resend all packets from input file(s) at the speed at which
they were recorded, a specified data \fIrate\fP, or as fast as the hardware is 
capable.  
.LP
If no
\fIrate\fP or
\fImultiplier\fP are given, 
.I tcpreplay 
will replay packets at the speed they were captured from the wire.
.LP
By processing a \fIcache file\fP generated by \fItcpprep(8)\fP, tcpreplay 
is able to split traffic between two interfaces.  This is useful for testing 
bridges, routers, and other gateway devices. Also supported is rewriting of 
the destination \fIMAC addresses\fP to allow routers and other devices which 
proxy-arp to forward packets.
.SH OPTIONS
.LP
.TP
.B \-f 
Specify a file that contains configuration options. 
Option tokens are listed below next to the corresponding command-line flag.
.TP
.B \-c or "cachefile"
Specify the \fItcpprep cache\fR to use to process packets.
.TP
.B \-h
Prints help/usage
.TP
.B \-i or "intf"
Specify the interface in which to send packets.
.TP
.B \-I or "primary_mac"
Specify the \fIdestination MAC\fR to use for packets being sent out the primary
interface.
.TP
.B \-j or "second_intf"
Specify the \fIsecondary interface\fR in which to send packets.
.TP
.B \-J or "second_mac"
Specify the \fIdestination MAC\fR to use for packets being sent out the 
secondary interface.
.TP
.B \-l or "loop"
Resend the capture file(s) \fIloop count\fR times.  Setting this to 0 (zero)
will cause tcpreplay to loop infinately.
.TP
.B \-m or "multiplier"
Resend the packets a \fImultiple\fR of the speed at which they were
recorded.
.TP
.B \-M or "no_martians"
Disable sending martian packets (source networks: 0/8, 127/8, 255/8)
.TP
.B \-r or "rate"
Resend the packets at the \fIrate\fR specified (in Mbps).
.TP
.B \-C or "cidr"
CIDR mode. Specify a list of CIDR's (network1/masklen1,network2/masklen2,...) 
to match against the source IP of each packet. Packets matching any of the 
CIDR's are sent out the primary interface; remaining packets are sent out 
the secondary interface.  Can't be used with -c.
.TP
.B \-R or "topspeed"
Resend the packets as fast as possible. Negates other speed options.
.TP
.B \-s or "seed"
Specify a seed value to allow rewriting the source and destination IP
addresses (only in IP header) to pseudo-random values.  Will also recalculate 
the IP header as necessary.
.TP
.B \-u or "untruncate"
Untruncates IP packets when snaplen > the actual packet length.  Packets can
be padded (\fIpad\fR) with zeros or truncated (\fItrunc\fR) to the snaplen.
Will also recalcuate the IP and TCP/UDP checksums as necessary.
.TP
.B \-v or "verbose"
.br
Verbose mode, currently unused.
.TP
.B \-V
Print version info and exit.
.TP
.B \-x or "include"
Specifies which packets from the capture file(s) to send.  Can be one of:
.br
.br
S:<CIDR1>,... - Src IP must match specified CIDR(s)
.br
D:<CIDR1>,... - Dst IP must match specified CIDR(s)
.br
B:<CIDR1>,... - Both src and dst addresses must match
.br
E:<CIDR1>,... - Either src or dst address must match
.br
P:<list>      - Must be one of the listed packets where the list corresponds to the
packet number in the capture file.  Ex: -x P:1-5,9,15 would only send packets 1 
through 5, 9 and 15.
.TP
.B \-X or "exclude"
Specifies which packets from the capture file(s) to NOT send.  Can be one of:
.br
S:<CIDR1>,... - Src IP must match specified CIDR(s)
.br
D:<CIDR1>,... - Dst IP must match specified CIDR(s)
.br
B:<CIDR1>,... - Both src and dst addresses must match
.br
E:<CIDR1>,... - Either src or dst address must match
.br
P:<list>      - Must be one of the listed packets where the list corresponds to the
packet number in the capture file.  Ex: -X P:1-5,9,15 would send all packets except 1 
through 5, 9 and 15.
.SH "SEE ALSO"
tcpdump(8), snoop(1M), tcpprep(1), capinfo(1)
.SH AUTHORS
Matt Undy, Anzen Computing.
.br
Matt Bing <mbing@nfr.net>
.br
Aaron Turner <aturner@pobox.com>
.SH AVAILABILITY
.LP
The current version is available via HTTP:
.LP
.RS
.I http://www.sourceforge.net/projects/tcpreplay/
.RE
.SH BUGS
.I tcpreplay
can only send packets as fast as your machine's interface,
processor, and disk will allow.
.LP
``\fIN\fR write attempts failed from full buffers and were repeated''
indicates that kernel buffers were full and \fIN\fR packets had to
be resent.
.LP
Looping captured traffic may simulate odd conditions on a network.
For example, opening the same TCP connection multiple times may 
exhaust resources on machines tracking the connection. The 
.B \-l
flag is provided to allow faster sending on machines with greater I/O
constraints. 
.LP
Looping will not work when reading from stdin since tcpreplay closes 
then re-opens the file and re-reads it from the beginning.
.LP
On BSD-based systems, kernel modifications may be required to preserve
outgoing link layer source addresses. Refer to the \fIlibnet(3)\fP
documentation for more information on how to do this. Increasing
NMBCLUSTERS kernel option will help performance.
